%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%Copyright (C) Samadrita Karmakar (samadritakarmakar@gmail.com)
%    This program is free software: you can redistribute it and/or modify
%    it under the terms of the GNU General Public License as published by
%    the Free Software Foundation, either version 3 of the License, or
%    (at your option) any later version.
%
%    This program is distributed in the hope that it will be useful,
%    but WITHOUT ANY WARRANTY; without even the implied warranty of
%    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
%    GNU General Public License for more details.
%
%    You should have received a copy of the GNU General Public License
%    along with this program.  If not, see <https://www.gnu.org/licenses/>.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

function CoeffMatrix=FindCoeffQuad(order)
NodeList=GmshNodeListQuad(order);
x=NodeList(:,1);
y=NodeList(:,2);
NumOfNodes=NumOfQuadNodes(order); %The Nodes are in the same sequence as generated by Gmsh.
Mat=BuildQuadMatrix(order, x, y, NumOfNodes); %Matrix generated as per Kamron Sanieeâˆ—, (2007).
CofMatrix=cof(Mat); %Finds cofactor of each matrix element.
CoeffMatrix =eye(NumOfNodes)*cof(Mat)/det(Mat); %each row represents the Coeff set of one node.
